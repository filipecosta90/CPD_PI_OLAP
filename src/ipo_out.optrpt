Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


Begin optimization report for: read_from_mx(char *, float **, int **, int **, int *, int *, int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at olap_search.c(192,29)
   remark #15523: loop was not vectorized: loop control variable element_number was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at olap_search.c(226,2)
   remark #15523: loop was not vectorized: loop control variable pos was found, but loop iteration count cannot be computed before executing the loop
LOOP END
===========================================================================

Begin optimization report for: csr_krao(float *, int *, int *, int, int, int, float *, int *, int *, int, int, int, float **, int **, int **, int *, int *, int *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at olap_search.c(530,2)
   remark #15388: vectorization support: reference C_IA1 has aligned access   [ olap_search.c(532,3) ]
   remark #15388: vectorization support: reference A_IA1 has aligned access   [ olap_search.c(532,3) ]
   remark #15305: vectorization support: vector length 4
   remark #15301: SIMD LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 7 
   remark #15477: vector loop cost: 0.750 
   remark #15478: estimated potential speedup: 9.330 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at olap_search.c(530,2)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at olap_search.c(538,2)
   remark #15388: vectorization support: reference C_csc_values has aligned access   [ olap_search.c(539,3) ]
   remark #15388: vectorization support: reference B_csc_values has aligned access   [ olap_search.c(539,3) ]
   remark #15388: vectorization support: reference A_csc_values has aligned access   [ olap_search.c(539,3) ]
   remark #15305: vectorization support: vector length 4
   remark #15301: SIMD LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 2 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 11 
   remark #15477: vector loop cost: 1.500 
   remark #15478: estimated potential speedup: 7.330 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at olap_search.c(538,2)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at olap_search.c(545,2)
   remark #15388: vectorization support: reference C_JA1 has aligned access   [ olap_search.c(546,3) ]
   remark #15388: vectorization support: reference B_JA1 has aligned access   [ olap_search.c(546,3) ]
   remark #15388: vectorization support: reference A_JA1 has aligned access   [ olap_search.c(546,3) ]
   remark #15305: vectorization support: vector length 4
   remark #15309: vectorization support: normalized vectorization overhead 0.333
   remark #15301: SIMD LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 2 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 12 
   remark #15477: vector loop cost: 2.250 
   remark #15478: estimated potential speedup: 5.300 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at olap_search.c(545,2)
<Remainder loop for vectorization>
LOOP END
===========================================================================
