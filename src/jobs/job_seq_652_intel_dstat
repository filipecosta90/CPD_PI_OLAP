## FICHEIRO MODELO PBS CRIADO PARA A DISCIPLINA DE CPD::ESC
## GRUPO : FILIPE OLIVEIRA
## FEV/2016

#!/bin/bash

#          Remarks: A line beginning with # is a comment.
#          A line beginning with #PBS is a PBS directive.
#          PBS directives must come first; any directives
#          after the first executable statement are ignored.

#PBS -N esc_seq_4.9.0_O0_662_DSTAT
#PBS -l walltime=00:90:00
#PBS -q mei

#          PBS can send informative email messages to you about the
#          status of your job.  Specify a string which consists of
#          either the single character "n" (no mail), or one or more
#          of the characters "a" (send mail when job is aborted),
#          "b" (send mail when job begins), and "e" (send mail when
#          job terminates).  The default is "a" if not specified.
#          You should also specify the email address to which the
#          message should be send via the -M option.

#PBS -m abe
#PBS -M a57816@alunos.uminho.pt
#PBS -M a57779@alunos.uminho.pt

#          Specify the number of nodes requested and the
#          number of processors per node. 

#PBS -l nodes=compute-652-1:ppn=40

echo "Loading Parallel Studio XE 2016 Compilers ..."
module purge
cd 
cd /share/apps/intel/parallel_studio_xe_2016.0.047/compilers_and_libraries_2016/linux/bin
source compilervars_global.sh intel64
cd /share/apps/intel/parallel_studio_xe_2016.0.047/compilers_and_libraries_2016/linux/mkl/bin
source mklvars.sh intel64
echo "DONE!"

echo "Ready now for running make!"

cd CPD/PI/CPD_PI_OLAP/src


read -r node_info<$PBS_NODEFILE

echo "Allocated computing node: $node_info"

max_ppn=1
sample_size=1
exec = "querie1_search"

for (( ppn = 1; ppn <= max_ppn; ++ppn )) 
do
echo "Running $sample_size * ppn: $ppn nodes"
for (( seq_num=1; seq_num <= $sample_size; ++seq_num ))
do
	echo "running $execc"
        /home/a57779/dstat -tvfnml --output "Dstat/$exec".csv >> /dev/null &
	echo ".. going to run $exec (dstat $!)"
	./$exec > Dstat/DSTAT_"$exec"_.txt
	sleep 5
	kill $!
	echo "$! killed"
done
done

echo "Done..."
