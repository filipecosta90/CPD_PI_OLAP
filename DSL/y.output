State 13 conflicts: 5 shift/reduce


Grammar

    0 $accept: expression $end

    1 expression: '(' expression ')'
    2           | expression operation expression
    3           | id

    4 operation: DOT_P
    5          | TRANSP
    6          | KRAO
    7          | KNECKER
    8          | HADAMAR


Terminals, with rules where they appear

$end (0) 0
'(' (40) 1
')' (41) 1
error (256)
DOT_P (258) 4
TRANSP (259) 5
KRAO (260) 6
KNECKER (261) 7
HADAMAR (262) 8
id (263) 3


Nonterminals, with rules where they appear

$accept (11)
    on left: 0
expression (12)
    on left: 1 2 3, on right: 0 1 2
operation (13)
    on left: 4 5 6 7 8, on right: 2


state 0

    0 $accept: . expression $end

    id   shift, and go to state 1
    '('  shift, and go to state 2

    expression  go to state 3


state 1

    3 expression: id .

    $default  reduce using rule 3 (expression)


state 2

    1 expression: '(' . expression ')'

    id   shift, and go to state 1
    '('  shift, and go to state 2

    expression  go to state 4


state 3

    0 $accept: expression . $end
    2 expression: expression . operation expression

    $end     shift, and go to state 5
    DOT_P    shift, and go to state 6
    TRANSP   shift, and go to state 7
    KRAO     shift, and go to state 8
    KNECKER  shift, and go to state 9
    HADAMAR  shift, and go to state 10

    operation  go to state 11


state 4

    1 expression: '(' expression . ')'
    2           | expression . operation expression

    DOT_P    shift, and go to state 6
    TRANSP   shift, and go to state 7
    KRAO     shift, and go to state 8
    KNECKER  shift, and go to state 9
    HADAMAR  shift, and go to state 10
    ')'      shift, and go to state 12

    operation  go to state 11


state 5

    0 $accept: expression $end .

    $default  accept


state 6

    4 operation: DOT_P .

    $default  reduce using rule 4 (operation)


state 7

    5 operation: TRANSP .

    $default  reduce using rule 5 (operation)


state 8

    6 operation: KRAO .

    $default  reduce using rule 6 (operation)


state 9

    7 operation: KNECKER .

    $default  reduce using rule 7 (operation)


state 10

    8 operation: HADAMAR .

    $default  reduce using rule 8 (operation)


state 11

    2 expression: expression operation . expression

    id   shift, and go to state 1
    '('  shift, and go to state 2

    expression  go to state 13


state 12

    1 expression: '(' expression ')' .

    $default  reduce using rule 1 (expression)


state 13

    2 expression: expression . operation expression
    2           | expression operation expression .

    DOT_P    shift, and go to state 6
    TRANSP   shift, and go to state 7
    KRAO     shift, and go to state 8
    KNECKER  shift, and go to state 9
    HADAMAR  shift, and go to state 10

    DOT_P     [reduce using rule 2 (expression)]
    TRANSP    [reduce using rule 2 (expression)]
    KRAO      [reduce using rule 2 (expression)]
    KNECKER   [reduce using rule 2 (expression)]
    HADAMAR   [reduce using rule 2 (expression)]
    $default  reduce using rule 2 (expression)

    operation  go to state 11
