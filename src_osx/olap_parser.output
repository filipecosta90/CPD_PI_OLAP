Terminals unused in grammar

   DROP
   BANG
   TBL_READ
   MX_FILTER_AND
   TBL_WRITE
   CONDITION
   KEY_CONDITION


State 1 conflicts: 7 shift/reduce


Grammar

    0 $accept: initial_expression $end

    1 initial_expression: BGN body END

    2 body: body elem
    3     | elem
    4     | %empty

    5 elem: Create_declaration ';'
    6     | Load_declaration ';'
    7     | Inline_declaration_type ';'
    8     | time query time

    9 Create_declaration: CREATE CUBE IDENTIFIER

   10 Load_declaration: LOAD MATRIX COLUMN INTEGER INFILE IDENTIFIER AS IDENTIFIER INTO IDENTIFIER
   11                 | LOAD BITMAP COLUMN INTEGER INFILE IDENTIFIER AS IDENTIFIER INTO IDENTIFIER

   12 Inline_declaration_type: VECTOR IDENTIFIER
   13                        | MATRIX IDENTIFIER
   14                        | BITMAP IDENTIFIER

   15 query: query atribuition_expression ';'
   16      | atribuition_expression ';'

   17 time: START
   18     | STOP

   19 atribuition_expression: IDENTIFIER '=' expression

   20 expression: IDENTIFIER '*' IDENTIFIER
   21           | IDENTIFIER HADAMARD IDENTIFIER
   22           | IDENTIFIER KRON IDENTIFIER
   23           | IDENTIFIER KRAO IDENTIFIER
   24           | IDENTIFIER TR
   25           | '(' expression ')'


Terminals, with rules where they appear

$end (0) 0
'(' (40) 25
')' (41) 25
'*' (42) 20
';' (59) 5 6 7 15 16
'=' (61) 19
error (256)
BGN (258) 1
END (259) 1
CREATE (260) 9
CUBE (261) 9
LOAD (262) 10 11
DROP (263)
COLUMN (264) 10 11
INFILE (265) 10 11
AS (266) 10 11
INTO (267) 10 11
IDENTIFIER (268) 9 10 11 12 13 14 19 20 21 22 23 24
INTEGER (269) 10 11
HADAMARD (270) 21
KRAO (271) 23
KRON (272) 22
TR (273) 24
VECTOR (274) 12
MATRIX (275) 10 13
BITMAP (276) 11 14
BANG (277)
TBL_READ (278)
MX_FILTER_AND (279)
TBL_WRITE (280)
CONDITION (281)
KEY_CONDITION (282)
START (283) 17
STOP (284) 18


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
initial_expression (36)
    on left: 1, on right: 0
body (37)
    on left: 2 3 4, on right: 1 2
elem (38)
    on left: 5 6 7 8, on right: 2 3
Create_declaration (39)
    on left: 9, on right: 5
Load_declaration (40)
    on left: 10 11, on right: 6
Inline_declaration_type (41)
    on left: 12 13 14, on right: 7
query (42)
    on left: 15 16, on right: 8 15
time (43)
    on left: 17 18, on right: 8
atribuition_expression (44)
    on left: 19, on right: 15 16
expression (45)
    on left: 20 21 22 23 24 25, on right: 19 25


State 0

    0 $accept: . initial_expression $end

    BGN  shift, and go to state 1

    initial_expression  go to state 2


State 1

    1 initial_expression: BGN . body END

    CREATE  shift, and go to state 3
    LOAD    shift, and go to state 4
    VECTOR  shift, and go to state 5
    MATRIX  shift, and go to state 6
    BITMAP  shift, and go to state 7
    START   shift, and go to state 8
    STOP    shift, and go to state 9

    CREATE    [reduce using rule 4 (body)]
    LOAD      [reduce using rule 4 (body)]
    VECTOR    [reduce using rule 4 (body)]
    MATRIX    [reduce using rule 4 (body)]
    BITMAP    [reduce using rule 4 (body)]
    START     [reduce using rule 4 (body)]
    STOP      [reduce using rule 4 (body)]
    $default  reduce using rule 4 (body)

    body                     go to state 10
    elem                     go to state 11
    Create_declaration       go to state 12
    Load_declaration         go to state 13
    Inline_declaration_type  go to state 14
    time                     go to state 15


State 2

    0 $accept: initial_expression . $end

    $end  shift, and go to state 16


State 3

    9 Create_declaration: CREATE . CUBE IDENTIFIER

    CUBE  shift, and go to state 17


State 4

   10 Load_declaration: LOAD . MATRIX COLUMN INTEGER INFILE IDENTIFIER AS IDENTIFIER INTO IDENTIFIER
   11                 | LOAD . BITMAP COLUMN INTEGER INFILE IDENTIFIER AS IDENTIFIER INTO IDENTIFIER

    MATRIX  shift, and go to state 18
    BITMAP  shift, and go to state 19


State 5

   12 Inline_declaration_type: VECTOR . IDENTIFIER

    IDENTIFIER  shift, and go to state 20


State 6

   13 Inline_declaration_type: MATRIX . IDENTIFIER

    IDENTIFIER  shift, and go to state 21


State 7

   14 Inline_declaration_type: BITMAP . IDENTIFIER

    IDENTIFIER  shift, and go to state 22


State 8

   17 time: START .

    $default  reduce using rule 17 (time)


State 9

   18 time: STOP .

    $default  reduce using rule 18 (time)


State 10

    1 initial_expression: BGN body . END
    2 body: body . elem

    END     shift, and go to state 23
    CREATE  shift, and go to state 3
    LOAD    shift, and go to state 4
    VECTOR  shift, and go to state 5
    MATRIX  shift, and go to state 6
    BITMAP  shift, and go to state 7
    START   shift, and go to state 8
    STOP    shift, and go to state 9

    elem                     go to state 24
    Create_declaration       go to state 12
    Load_declaration         go to state 13
    Inline_declaration_type  go to state 14
    time                     go to state 15


State 11

    3 body: elem .

    $default  reduce using rule 3 (body)


State 12

    5 elem: Create_declaration . ';'

    ';'  shift, and go to state 25


State 13

    6 elem: Load_declaration . ';'

    ';'  shift, and go to state 26


State 14

    7 elem: Inline_declaration_type . ';'

    ';'  shift, and go to state 27


State 15

    8 elem: time . query time

    IDENTIFIER  shift, and go to state 28

    query                   go to state 29
    atribuition_expression  go to state 30


State 16

    0 $accept: initial_expression $end .

    $default  accept


State 17

    9 Create_declaration: CREATE CUBE . IDENTIFIER

    IDENTIFIER  shift, and go to state 31


State 18

   10 Load_declaration: LOAD MATRIX . COLUMN INTEGER INFILE IDENTIFIER AS IDENTIFIER INTO IDENTIFIER

    COLUMN  shift, and go to state 32


State 19

   11 Load_declaration: LOAD BITMAP . COLUMN INTEGER INFILE IDENTIFIER AS IDENTIFIER INTO IDENTIFIER

    COLUMN  shift, and go to state 33


State 20

   12 Inline_declaration_type: VECTOR IDENTIFIER .

    $default  reduce using rule 12 (Inline_declaration_type)


State 21

   13 Inline_declaration_type: MATRIX IDENTIFIER .

    $default  reduce using rule 13 (Inline_declaration_type)


State 22

   14 Inline_declaration_type: BITMAP IDENTIFIER .

    $default  reduce using rule 14 (Inline_declaration_type)


State 23

    1 initial_expression: BGN body END .

    $default  reduce using rule 1 (initial_expression)


State 24

    2 body: body elem .

    $default  reduce using rule 2 (body)


State 25

    5 elem: Create_declaration ';' .

    $default  reduce using rule 5 (elem)


State 26

    6 elem: Load_declaration ';' .

    $default  reduce using rule 6 (elem)


State 27

    7 elem: Inline_declaration_type ';' .

    $default  reduce using rule 7 (elem)


State 28

   19 atribuition_expression: IDENTIFIER . '=' expression

    '='  shift, and go to state 34


State 29

    8 elem: time query . time
   15 query: query . atribuition_expression ';'

    IDENTIFIER  shift, and go to state 28
    START       shift, and go to state 8
    STOP        shift, and go to state 9

    time                    go to state 35
    atribuition_expression  go to state 36


State 30

   16 query: atribuition_expression . ';'

    ';'  shift, and go to state 37


State 31

    9 Create_declaration: CREATE CUBE IDENTIFIER .

    $default  reduce using rule 9 (Create_declaration)


State 32

   10 Load_declaration: LOAD MATRIX COLUMN . INTEGER INFILE IDENTIFIER AS IDENTIFIER INTO IDENTIFIER

    INTEGER  shift, and go to state 38


State 33

   11 Load_declaration: LOAD BITMAP COLUMN . INTEGER INFILE IDENTIFIER AS IDENTIFIER INTO IDENTIFIER

    INTEGER  shift, and go to state 39


State 34

   19 atribuition_expression: IDENTIFIER '=' . expression

    IDENTIFIER  shift, and go to state 40
    '('         shift, and go to state 41

    expression  go to state 42


State 35

    8 elem: time query time .

    $default  reduce using rule 8 (elem)


State 36

   15 query: query atribuition_expression . ';'

    ';'  shift, and go to state 43


State 37

   16 query: atribuition_expression ';' .

    $default  reduce using rule 16 (query)


State 38

   10 Load_declaration: LOAD MATRIX COLUMN INTEGER . INFILE IDENTIFIER AS IDENTIFIER INTO IDENTIFIER

    INFILE  shift, and go to state 44


State 39

   11 Load_declaration: LOAD BITMAP COLUMN INTEGER . INFILE IDENTIFIER AS IDENTIFIER INTO IDENTIFIER

    INFILE  shift, and go to state 45


State 40

   20 expression: IDENTIFIER . '*' IDENTIFIER
   21           | IDENTIFIER . HADAMARD IDENTIFIER
   22           | IDENTIFIER . KRON IDENTIFIER
   23           | IDENTIFIER . KRAO IDENTIFIER
   24           | IDENTIFIER . TR

    HADAMARD  shift, and go to state 46
    KRAO      shift, and go to state 47
    KRON      shift, and go to state 48
    TR        shift, and go to state 49
    '*'       shift, and go to state 50


State 41

   25 expression: '(' . expression ')'

    IDENTIFIER  shift, and go to state 40
    '('         shift, and go to state 41

    expression  go to state 51


State 42

   19 atribuition_expression: IDENTIFIER '=' expression .

    $default  reduce using rule 19 (atribuition_expression)


State 43

   15 query: query atribuition_expression ';' .

    $default  reduce using rule 15 (query)


State 44

   10 Load_declaration: LOAD MATRIX COLUMN INTEGER INFILE . IDENTIFIER AS IDENTIFIER INTO IDENTIFIER

    IDENTIFIER  shift, and go to state 52


State 45

   11 Load_declaration: LOAD BITMAP COLUMN INTEGER INFILE . IDENTIFIER AS IDENTIFIER INTO IDENTIFIER

    IDENTIFIER  shift, and go to state 53


State 46

   21 expression: IDENTIFIER HADAMARD . IDENTIFIER

    IDENTIFIER  shift, and go to state 54


State 47

   23 expression: IDENTIFIER KRAO . IDENTIFIER

    IDENTIFIER  shift, and go to state 55


State 48

   22 expression: IDENTIFIER KRON . IDENTIFIER

    IDENTIFIER  shift, and go to state 56


State 49

   24 expression: IDENTIFIER TR .

    $default  reduce using rule 24 (expression)


State 50

   20 expression: IDENTIFIER '*' . IDENTIFIER

    IDENTIFIER  shift, and go to state 57


State 51

   25 expression: '(' expression . ')'

    ')'  shift, and go to state 58


State 52

   10 Load_declaration: LOAD MATRIX COLUMN INTEGER INFILE IDENTIFIER . AS IDENTIFIER INTO IDENTIFIER

    AS  shift, and go to state 59


State 53

   11 Load_declaration: LOAD BITMAP COLUMN INTEGER INFILE IDENTIFIER . AS IDENTIFIER INTO IDENTIFIER

    AS  shift, and go to state 60


State 54

   21 expression: IDENTIFIER HADAMARD IDENTIFIER .

    $default  reduce using rule 21 (expression)


State 55

   23 expression: IDENTIFIER KRAO IDENTIFIER .

    $default  reduce using rule 23 (expression)


State 56

   22 expression: IDENTIFIER KRON IDENTIFIER .

    $default  reduce using rule 22 (expression)


State 57

   20 expression: IDENTIFIER '*' IDENTIFIER .

    $default  reduce using rule 20 (expression)


State 58

   25 expression: '(' expression ')' .

    $default  reduce using rule 25 (expression)


State 59

   10 Load_declaration: LOAD MATRIX COLUMN INTEGER INFILE IDENTIFIER AS . IDENTIFIER INTO IDENTIFIER

    IDENTIFIER  shift, and go to state 61


State 60

   11 Load_declaration: LOAD BITMAP COLUMN INTEGER INFILE IDENTIFIER AS . IDENTIFIER INTO IDENTIFIER

    IDENTIFIER  shift, and go to state 62


State 61

   10 Load_declaration: LOAD MATRIX COLUMN INTEGER INFILE IDENTIFIER AS IDENTIFIER . INTO IDENTIFIER

    INTO  shift, and go to state 63


State 62

   11 Load_declaration: LOAD BITMAP COLUMN INTEGER INFILE IDENTIFIER AS IDENTIFIER . INTO IDENTIFIER

    INTO  shift, and go to state 64


State 63

   10 Load_declaration: LOAD MATRIX COLUMN INTEGER INFILE IDENTIFIER AS IDENTIFIER INTO . IDENTIFIER

    IDENTIFIER  shift, and go to state 65


State 64

   11 Load_declaration: LOAD BITMAP COLUMN INTEGER INFILE IDENTIFIER AS IDENTIFIER INTO . IDENTIFIER

    IDENTIFIER  shift, and go to state 66


State 65

   10 Load_declaration: LOAD MATRIX COLUMN INTEGER INFILE IDENTIFIER AS IDENTIFIER INTO IDENTIFIER .

    $default  reduce using rule 10 (Load_declaration)


State 66

   11 Load_declaration: LOAD BITMAP COLUMN INTEGER INFILE IDENTIFIER AS IDENTIFIER INTO IDENTIFIER .

    $default  reduce using rule 11 (Load_declaration)
